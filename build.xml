<project name="JDigiDoc" basedir="." default="compile">
	<property name="jdigidoc.dir" location="jdigidoc" />
	<property name="src.dir" location="jdigidoc/src/main/java" />
	<property name="test.dir" location="jdigidoc/src/test/java" />
	<property name="resources.dir" location="jdigidoc/src/main/resources" />
	<property name="certs.dir" location="jdigidoc/src/main/resources/certs" />
    	<property file="version.properties" />
	<property environment="env" />
	<property name="lib.dir" location="${env.HOME}/libs/jdigidoc" />
	<property name="dlib.dir" location="lib" />
	<property name="tmp.dir" location="tmp" />
	<property name="doc.dir" location="doc" />
	<property name="classes.dir" location="${tmp.dir}/classes" />
	<property name="javadoc.gen.dir" location="${tmp.dir}/javadoc" />


	<path id="master-classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${classes.dir}" />
		<pathelement location="${env.JAVA_HOME}/lib/tools.jar" />
	</path>

        <patternset id="jar.patternset">
                <include name="**/*.*" />
        </patternset>

	<!-- fileset used to generate javadoc for client.jar -->
	<fileset dir="${src.dir}" id="javadoc-fileset">
		<patternset refid="jar.patternset" />
	</fileset>

	<fileset dir="${src.dir}" id="javadoc-fileset">
		<patternset refid="jar.patternset" />
	</fileset>

  	<fileset dir="${resources.dir}" id="sk-prod-certs">
		<include name="certs/EID-SK*.crt" />
		<include name="certs/ESTEID-SK*.crt" />
		<include name="certs/JUUR-SK.crt" />
		<include name="certs/KLASS3-SK*.crt" />
		<include name="certs/EECCRCA.crt" />
		<include name="certs/SK OCSP 2011.crt" />
		<include name="certs/SK_proxy_OCSP_responder_2009.pem.cer" />
	</fileset> 
			
   	<fileset dir="${resources.dir}" id="sk-test-certs">
		<include name="certs/TEST*.crt" />
                <include name="certs/iaik-tsa*.crt" />
	</fileset> 

   	<fileset dir="${lib.dir}" id="jd-libs">
		<include name="bcmail-jdk15on-151.jar" />
		<include name="bcprov-jdk15on-151.jar" />
		<include name="bcpkix-jdk15on-151.jar" />
		<include name="commons-codec-1.6.jar" />
		<include name="commons-compress-1.3.jar" />
		<include name="iaikPkcs11Wrapper.jar" />
		<include name="jakarta-log4j-1.2.6.jar" />
	</fileset>

	<fileset dir="${lib.dir}" id="jd-libs-and-bin">
                <include name="bcmail-jdk15on-151.jar" />
                <include name="bcprov-jdk15on-151.jar" />
                <include name="bcpkix-jdk15on-151.jar" />
                <include name="commons-codec-1.6.jar" />
                <include name="commons-compress-1.3.jar" />
                <include name="iaikPkcs11Wrapper.jar" />
                <include name="jakarta-log4j-1.2.6.jar" />
		<include name="linux32/*" />
		<include name="linux64/*" />
		<include name="macUniversal/*" />
		<include name="win32/*" />
		<include name="win64/*" />
        </fileset> 

	<target name="clean" description="Remove generated files">
		<delete dir="${tmp.dir}"/>
		<delete dir="${dlib.dir}"/>
	</target>

	<target name="dist-libs" description="Downloading dependent libs for dist">
		<mkdir dir="${dlib.dir}" />
		<get src="http://www.bouncycastle.org/download/bcprov-jdk15on-151.jar" dest="${dlib.dir}/bcprov-jdk15on-151.jar" verbose="true" />
		<get src="http://www.bouncycastle.org/download/bcmail-jdk15on-151.jar" dest="${dlib.dir}/bcmail-jdk15on-151.jar" verbose="true" />
		<get src="http://www.bouncycastle.org/download/bcpg-jdk15on-151.jar" dest="${dlib.dir}/bcpg-jdk15on-151.jar" verbose="true" />
		<get src="http://www.bouncycastle.org/download/bcpkix-jdk15on-151.jar" dest="${dlib.dir}/bcpkix-jdk15on-151.jar" verbose="true" />
		<get src="http://repo1.maven.org/maven2/commons-codec/commons-codec/1.6/commons-codec-1.6.jar" dest="${dlib.dir}/commons-codec-1.6.jar" verbose="true" />
		<get src="http://central.maven.org/maven2/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar" dest="${dlib.dir}/commons-compress-1.5.jar" verbose="true" />
		<get src="http://central.maven.org/maven2/ant/ant-jakarta-log4j/1.6.1/ant-jakarta-log4j-1.6.1.jar" dest="${dlib.dir}/ant-jakarta-log4j-1.6.1.jar" verbose="true" />
		<get src="http://maven.petalslink.com/others/es/mityc/jumbo/adsi/iaikPkcs11Wrapper/1.1.7/iaikPkcs11Wrapper-1.1.7.jar" dest="${dlib.dir}/iaikPkcs11Wrapper-1.1.7.jar" verbose="true" />
	</target>

        <target name="verchg" description="Set version number">
	  <replace file="${src.dir}/ee/sk/digidoc/Version.java" token="3.9.0" value="${env.JDD_VERSION}" />	
	</target>

	<target name="init" description="Make init without local libs copying">
		<mkdir dir="${tmp.dir}" />
                <mkdir dir="${classes.dir}" />
                <mkdir dir="${javadoc.gen.dir}" />
                <mkdir dir="${tmp.dir}/lib" />
                <mkdir dir="${tmp.dir}/doc" />
                <copy todir="${tmp.dir}">
                        <fileset dir="${resources.dir}">
                          <include name="jdigidoc.cfg" />
                          <include name="log4j.properties" />
                        </fileset>
                </copy>
	</target>

	<target name="init-libs" description="Make neccessary preparations">
		<copy todir="${tmp.dir}/lib">
			<fileset refid="jd-libs-and-bin"/>
		</copy>
	</target>

	<target name="whenJava">
		<condition property="caller.java" value="true">
			<contains string="${caller.name}" substring=".java" casesensitive="false" />
		</condition>
	</target>
	
	<target name="build" depends="compile"
		description="Compile, for those of us used to 'build' ;)"/>
	
	<target name="compile"  description="Compile main source tree java files"
		depends="init,init-libs,verchg">
		<javac destdir="${classes.dir}" target="1.5" debug="true"
			deprecation="false" optimize="false" failonerror="true" encoding="UTF-8" source="1.5">
			<src path="${src.dir}" />
			<src path="${test.dir}" />
			<classpath refid="master-classpath" />
			<compilerarg line="-Xlint:unchecked" />
		</javac>
	</target>

	<target name="dist-compile" description="Compile with downloading jars and without ver change" depends="dist-libs,init">
		<javac destdir="${classes.dir}" target="1.5" debug="true"
                        deprecation="false" optimize="false" failonerror="true" encoding="UTF-8" source="1.5">
                        <src path="${src.dir}" />
                        <src path="${test.dir}" />
                        <classpath refid="master-classpath" />
                        <compilerarg line="-Xlint:unchecked" />
                </javac>
	</target>

	<target name="javadoc" depends="distjar" description="Generate API documentation">
		<javadoc
			classpathref="master-classpath"
			destdir="${javadoc.gen.dir}"
			author="true"
			version="true"
			use="true"
			windowtitle="JDigiDoc API"
			encoding="UTF-8"
			failonerror="false"
			charset="UTF-8">
			<fileset refid="javadoc-fileset"/>
			<doctitle><![CDATA[<h1>JDigiDoc</h1>]]></doctitle>
		</javadoc>
		<zip basedir="${javadoc.gen.dir}" destfile="${tmp.dir}/jdigidoc-${env.JDD_VERSION}-javadoc.zip"/>
	</target>
	
	<target name="jdcerts" depends="compile" description="Create a JAR file.">
		<delete file="${tmp.dir}/jdcerts.jar" failonerror="false"/>
		<jar destfile="${tmp.dir}/jdcerts.jar" update="false">
			<fileset refid="sk-test-certs" />
		</jar>
	</target>
	
	<target name="jar" depends="compile,jdcerts" description="Create a JAR file.">
		<delete file="${tmp.dir}/${ant.project.name}.jar" failonerror="false"/>
		<jar destfile="${tmp.dir}/${ant.project.name}.jar" update="false">
			<fileset dir="${classes.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset refid="sk-prod-certs" />
		</jar>
	</target>

	<target name="dist-jar" depends="dist-compile,jdcerts" description="Create a JAR file.">
                <delete file="${tmp.dir}/${ant.project.name}.jar" failonerror="false"/>
                <jar destfile="${tmp.dir}/${ant.project.name}.jar" update="false">
                        <fileset dir="${classes.dir}">
                                <include name="**/*.*" />
                        </fileset>
                        <fileset refid="sk-prod-certs" />
                </jar>
        </target>

        <target name="util-jar" depends="distjar">
                <jar destfile="${tmp.dir}/jdigidocutil-${env.JDD_VERSION}.jar">
                <manifest>
                        <attribute name="Class-Path" value="esteidtestcerts.jar lib/esteidtestcerts.jar jdigidoc-${env.JDD_VERSION}.jar lib/bcmail-jdk15on-151.jar lib/bcpkix-jdk15on-151.jar lib/bcprov-jdk15on-151.jar lib/commons-codec-1.6.jar lib/jakarta-log4j-1.2.6.jar lib/commons-compress-1.3.jar lib/jce-1_2_2.zip lib/tinyxmlcanonicalizer-0.9.0.jar lib/iaikPkcs11Wrapper.jar lib/jce_policy-1_4_2.zip ."/>
                        <attribute name="Main-Class" value="ee.sk.test.jdigidoc"/>
                </manifest>
        	</jar>
        </target>

	<target name="distjar" depends="compile" description="Create a JAR file.">
                <delete file="${tmp.dir}/jdigidoc-${env.JDD_VERSION}.jar" failonerror="false"/>
                <jar destfile="${tmp.dir}/jdigidoc-${env.JDD_VERSION}.jar" update="false">
                        <fileset dir="${classes.dir}">
                                <include name="**/*.*" />
                        </fileset>
                        <fileset refid="sk-prod-certs" />
                </jar>
        </target>

	<target name="deplibs" depends="distjar">
		<zip destfile="${tmp.dir}/jdigidoc-libs-${env.JDD_VERSION}.zip">
		<fileset refid="jd-libs"/>
		</zip>
        </target>

	<target name="source" description="Create a source JAR file.">
		<delete file="${tmp.dir}/*-source.jar" failonerror="false"/>
		<copy file="build.xml" todir="${jdigidoc.dir}"/>
		<jar destfile="${tmp.dir}/jdigidoc-${env.JDD_VERSION}-source.jar" update="false">
			<fileset dir="${src.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${test.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${jdigidoc.dir}">
                               <include name="*.xml" />
                        </fileset>
		</jar>
	</target>

	<target name="distzip" depends="distjar,source,javadoc,util-jar">
		<delete dir="${classes.dir}"/>
		<delete dir="${javadoc.gen.dir}"/>
                <zip destfile="${tmp.dir}/jdigidoc-${env.JDD_VERSION}.zip">
		<fileset dir="${tmp.dir}">
			<include name="**/*.*" />
		</fileset>
                </zip>
        </target>

</project>
